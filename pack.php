<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2020/11/19 0019
 * Time: 下午 10:11
 */
//
//该函数是根据format参数把args数据打包成“二进制”字符串 0101
//format 表示：要用几个字节来存储后面的数据 args
//$bin = pack("A","a");//中文字符占3个字节 24bit 一个英文字符占1个字节 【ascii码表】
//占用一个字节
//echo $bin;
//计算机基础 高中大一 【有符号，无符号，原码，反码，补码，移位，进制转换问题,websocket,mqtt】
//print_r(unpack("A",$bin));
//c有符号【高位的第一位】 /C【无符号】 1个字节 char 8bit

/*
 * 0x11223344
 * 内存是从低到高，
 * 数据是从高到低
 * 大端字节序 BE【网络字节序】 是指数据的低位保存在内存的高地址中，而数据的高位，保存在内存的低地址中。11 22 33 44
 * 小段字节序 LE 【主机字节序】 是指数据的低位保存在内存的低地址中，而数据的高位， 保存在内存的高地址中 44 33 22 11
 */
//有符号的就是7位

$a = 300;//100的值这个数字并没有超过1个字节的范围  0000 0000 1111 1111//10 进制 255
//表示用1个字节来存储数字100
//$bin = pack("c",$a);

//echo $bin;//这是二进制字符

//print_r(unpack("c",$bin));
//socket send/fwrite/write/send

//1byte|2byte
//300
//300这个值在内存中占用2个字节，内存的地址【c/c++】内存地址的别名是$a
//变量/函数..都是内存地址的助记符【别名】

$bin = pack("n",$a);//用内存中的2个字节来存储数字300 并且按网络字节序来存储

//echo $bin;

//print_r(unpack("n",$bin));//按主机字节序用2个字节来取
//0000 0001 0010 1100 这里左边补充的0并没有改变数值大小，只是为了方便看
//我现在是一个字节一个字节的取出来
echo ord($bin[0]);//取一个字节 0000 0001
echo ord($bin[1]);//取一个字节 0010 1100
//涉及到二进制的运算 [+,-,*,/] [websocket,mqtt,stream，crud】
echo "\r\n";
$ret = 0;//ret你可以看作是一个多字节的变量
$ret|=ord($bin[0])<<8;//位移，或运算  【与，或，非，异或，同或，复合逻辑运算】crud操作数据库，操作数组，api，
//复制粘粘【github,composer require ,node npm pip install 】crud boy 在工作中一般都这样
//时间有限，资源有限，工资有限，工资少，能跑就行【很容易搞成项目，时间就多出来】
//但是对自己的内功和自己的核心技术并没有任何增长
//<<左移运算，往左边移动
//$bin[0] = 0000 0001 我现在往左边移动,右边要补充8位0
//0000 0000
//& and
//$ret = 0000 0000 0000 0000
//$ret = 0000 0001 0000 0000 左移8位现在的值

//$bin[0] = 0000 0000 0000 0001 之前没有移动之前的
//$bin[0] = 0000 0001 0000 0000   左移8位现在的值


// | 运算 [任何数和1相|都是1，二进制，数字电路，计算机基础]
//0000 0000 0000 0000
//0000 0001 0000 0000
//--------------------
//$ret = 0000 0001 0000 0000
echo $ret;
echo "\r\n";

$ret|=ord($bin[1])<<0;//没有移
//0000 0001 0000 0000
//0000 0000 0010 1100
//0000 0001 0010 1100
//$ret=0000 0001 0010 1100 在内存中就是这样存储的 2个字节
echo $ret;
//websocket/mqtt 重中之重【多进程编程】
echo "\r\n";
echo "********************\r\n";

$a1 = 65539;//要用3个字节来存储才能表示   1bytes     |1bytes   |1bytes
                                     //0000 0001 0000 0000 0000 0011
//$bin1 = pack("N",$a1);//4bytes
//
//print_r(unpack("Nlen",$bin1));
//把$a1的值【65539】拆成3个字节分别存储
$a11 = $a1>>16&0XFF;//右移 2个字节 0000 0000 0000 0000 0000 0001
//0xFF 它是一个字节 目的是为了占用一个字节
$a12 = $a1>>8&0XFF;//0000 0000 0000 0001 0000 0000 &
                   //0000 0000 0000 0000 1111 1111
                   //0000 0000 0000 0000 0000 0000
$a13 = $a1>>0&0XFF;//0000 0001 0000 0000 0000 0011
                   //0000 0000 0000 0000 1111 1111
                   //0000 0000 0000 0000 0000 0011
$bin3 = pack("CCC",$a11,$a12,$a13);
echo $a11."-".$a12."-".$a13;
$zet = (unpack("Clen1/Clen2/Clen3",$bin3));
//0000 0000 0000 0000 0000 0000
$ret = 0;
//0000 0000 0000 0000 0000 0001
$ret|=$zet['len1']<<16;//左移2个字节
//0000 0001 0000 0000 0000 0000  65,536

//0000 0001 0000 0000 0000 0000
$ret|=$zet['len2']<<8;

$ret|=$zet['len3']<<0;

echo $ret;

